# go

[[language]]
name = "go"
auto-format = true
indent = { tab-width = 2, unit = "\t" }
language-servers = [ "efm-go", "gopls" ]

[language-server.efm-go]
command = "efm-langserver"

[language-server.efm-go.config]
documentFormatting = true
languages = { go = [
  { lintCommand = "golangci-lint run --color=never --out-format=tab --print-linter-name=false ${INPUT}", lintStdin = false, lintIgnoreExitCode = true, lintFormats = [ "%.%#:%l:%c %m" ], lintSeverity = 2 },
  { formatCommand = "goimports", formatStdin = true }
]}

# markdown

[[language]]
name = "markdown"
auto-format = true
formatter = { command = 'prettier', args = [ "--parser", "markdown", "--prose-wrap", "always" ] }
language-servers = [ { name = "efm-md", only-features = [ "diagnostics" ] }, "ltex" ]

[language-server.efm-md]
command = "efm-langserver"

[language-server.efm-md.config]
documentFormatting = false
languages = { markdown = [
  { lintCommand = "markdownlint --stdin", lintStdin = true, lintIgnoreExitCode = true, lintFormats = [ "stdin:%l %m", "stdin:%l:%c %m", "stdin: %l: %m" ], lintSeverity = 2 }
] }

[language-server.ltex]
command = "ltex-ls"

# nix

[[language]]
name = "nix"
auto-format = true
formatter = { command = 'nixpkgs-fmt', args = [] }

# yaml

[[language]]
name = "yaml"
language-servers = [ "efm-yaml", "yaml-language-server" ]

[language-server.efm-yaml]
command = "efm-langserver"

[language-server.efm-yaml.config]
documentFormatting = true
languages = { yaml = [
  { lintCommand = "yamllint -f parsable -", lintStdin = true, lintIgnoreExitCode = true, lintFormats = [ "%s:%l:%c: [%tarning] %m", "%s:%l:%c: [%trror] %m" ] },
  { formatCommand = "yamlfmt -", formatStdin = true }
] }

